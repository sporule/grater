name: Release

on:
  push:
    tags:
      - 'v*'

jobs:

  BuildandRelease:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi
    
    - name: Test
      run: go test -v .

    - name: Build Binaries
      run: |
        env GOOS=windows GOARCH=386 go build -v -o ./windows/data-basket.exe .
        cp config.json ./windows/
        env GOOS=linux GOARCH=386 go build -v -o ./linux/data-basket .
        cp config.json ./linux/
        env GOOS=darwin GOARCH=386 go build -v -o ./mac/data-basket .
        cp config.json ./mac/
    
    - name: Create Zip Release Files
      uses: montudor/action-zip@v0.1.0
      with:
        args:  zip -qq -r ./data-basket-windows.zip ./windows
    - uses: montudor/action-zip@v0.1.0
      with:
        args:  zip -qq -r ./data-basket-linux.zip ./linux
    - uses: montudor/action-zip@v0.1.0
      with:
        args:  zip -qq -r ./data-basket-mac.zip ./mac
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Data-Basket ${{ github.ref }}
        draft: false
        prerelease: false
        
    - name: Upload Release Asset Windows
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./data-basket-windows.zip
        asset_name: data-basket-windows.zip
        asset_content_type: application/zip
    
    - name: Upload Linux Release Asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./data-basket-linux.zip
        asset_name: data-basket-linux.zip
        asset_content_type: application/zip
        
    - name: Upload Mac Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./data-basket-mac.zip
        asset_name: data-basket-mac.zip
        asset_content_type: application/zip
